native_include "utility/non_null_ptr.hpp";

namespace iomgrcfg;

attribute "hotswap";
attribute "deprecated";

table SpdkDriveInterface {
    /* Number of batched io limit for SPDK request */
    num_batch_io_limit: uint32 = 2 (hotswap); 
}

table AioDriveInterface {
    retry_timeout: uint32 = 1000 (hotswap);
}

table IOMemory {
    // Percentage of memory to be filled by app before we ask underlying mem allocator to free it up
    soft_mem_release_threshold: uint32 = 85;

    // Percentage of memory to be filled by app before we force underlying mem allocator to free it up
    aggressive_mem_release_threshold: uint32 = 95;

    // Rate of memory release rate to the underlying mem allocator
    mem_release_rate: uint32 = 8;

    // Frequency in count of alloc/free to check if memory limit is exceeded
    limit_check_freq: uint32 = 1000;
}

table IomgrSettings {
    spdk: SpdkDriveInterface;
    aio : AioDriveInterface;
    iomem: IOMemory;

    cpuset_path: string;

    // Max messages processed before yielding for other completions. As of now it is applicable only for EPOLL Reactor
    max_msgs_before_yield: uint32 = 100 (hotswap);
    max_resubmit_cnt: uint32 = 3 (hotswap); // it is max resubmit cnt of io in case of error
}

root_type IomgrSettings;
